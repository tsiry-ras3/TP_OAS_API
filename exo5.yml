openapi: 3.0.3
info:
  title: exo5
  version: 1.0.0
components:
  schemas:
    Product:
      type: object
      properties:
        name:
          type: string
          example: keyboard
        expiration_datetime:
          type: string
          format: date-time
          example: "2025-03-13T14:42:00Z"
        price:
          type: number
          format: float
          example: 2000.20
    Order:
      type: object
      properties:
        identifier:
          type: integer
          example: 3
        customer_name:
          type: string
          example: John
        creation_datetime:
          type: string
          format: date-time
          example: "2025-06-26T08:00Z"
        total_amount:
          type: number
          format: float
          example: 200000.00
  parameters:
    limit:
      name: limit
      description: nombre maximum d'elements
      in: query
      required: false
      schema:
        type: integer
        example: 10
    q:
      name: q
      description: terme de recherche
      in: query
      required: false
      schema:
        type: string
        example: mouse
  securitySchemes:
    Authentication:
      type: http
      scheme: basic
paths:
  /products:
    parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/q'
    get:
      tags:
        - Products
      responses:
        200:
          description: product list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
              examples:
                multipleProducts:
                  value:
                    - name: keyboard
                      expiration_datetime: "2025-03-13T14:42:00Z"
                      price: 2013.06
                    - name: mouse
                      expiration_datetime: "2025-06-27T14:42:00Z"
                      price: 2013.06
                emptyList:
                  value: []
  /orders:
    get:
      tags:
        - Orders
      responses:
        200:
          description: liste des commandes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
    post:
      security:
        - Authentication: []
      tags:
        - Orders
      responses:
        200:
          description: liste des commandes poste
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Order'
tags:
  - name: Products
    description: product operation
  - name: Orders
    description: Orders operation
